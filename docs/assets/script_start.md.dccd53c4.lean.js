import{_ as a,v as e,b as t,R as r}from"./chunks/framework.f4f52a19.js";const _=JSON.parse('{"title":"准备程序","description":"","frontmatter":{},"headers":[],"relativePath":"script/start.md","filePath":"script/start.md"}'),s={name:"script/start.md"},o=r('<h1 id="准备程序" tabindex="-1">准备程序 <a class="header-anchor" href="#准备程序" aria-label="Permalink to &quot;准备程序&quot;">​</a></h1><p>对于有相关前端知识的人，只要知道这个框架使用了vue3+TypeScript编写基本就足够使用了，这部分人可以跳过本节。</p><p>下文是为了没有代码基础、没有代码编写相关工具和运行环境的人写的，将会介绍需要安装的环境软件和编写剧本的文本工具。对于我们在游戏里需要“执行”什么的部分，本框架使用<a href="/enumadv/script/ope.html">ope语句</a>来传达，可以完全不涉及真正意义上的代码，但仍需要了解一些格式上的内容。</p><h2 id="安装node-js" tabindex="-1">安装Node.js <a class="header-anchor" href="#安装node-js" aria-label="Permalink to &quot;安装Node.js&quot;">​</a></h2><h2 id="安装vscode" tabindex="-1">安装VSCode <a class="header-anchor" href="#安装vscode" aria-label="Permalink to &quot;安装VSCode&quot;">​</a></h2><h2 id="下载编译文件或源码文件" tabindex="-1">下载编译文件或源码文件 <a class="header-anchor" href="#下载编译文件或源码文件" aria-label="Permalink to &quot;下载编译文件或源码文件&quot;">​</a></h2><h2 id="了解json" tabindex="-1">了解json <a class="header-anchor" href="#了解json" aria-label="Permalink to &quot;了解json&quot;">​</a></h2>',7),n=[o];function i(d,h,c,l,p,u){return e(),t("div",null,n)}const f=a(s,[["render",i]]);export{_ as __pageData,f as default};
